@model Project2.Models.ProductAddViewModel

@{
    ViewBag.Title = "Update Product";
    Layout = "~/Views/Shared/_MyTheme.cshtml";
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <div class="row" style="margin-top:3px;">
        <div class="row">
            <h1 style="font-family:'Times New Roman', Times, serif;
                       color:darkgreen;
                       width:100%;
                       background-color:cadetblue;
                       text-align:center">
                Update Product
            </h1>
        </div>
        <div style="background-color:lightyellow">
            <div class="row" style="margin:5px; padding:25px">

                <div class="col-lg-3"></div>
                <div class="col-md-6">
                    <hr />
                    <div>
                        @if (ViewBag.SuccessMsg != null)
                        {
                            <h5 style="color:green; font-size:medium;">@ViewBag.SuccessMsg</h5>
                        }

                        @if (ViewBag.FailMsg != null)
                        {
                            <h5 style="color:red;font-size:medium;">@ViewBag.FailMsg</h5>
                        }
                    </div>
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @*// @Html.HiddenFor(model => model.ID)*@

                    <div class="form-group">
                        @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.CategoryId, Model.Categories, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ReorderLevel, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ReorderLevel, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ReorderLevel, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @*<div class="form-group">
            @Html.LabelFor(model => model.ImageProduct, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ImageProduct, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ImageProduct, "", new { @class = "text-danger" })
            </div>
        </div>*@

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Update" class="btn btn-default" />
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
 </div>
}


